version: '3.8'

services:
  db:
    image: mariadb:10.11 # Using a specific version that is recent and stable
    container_name: crm_kapexia_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "supersecretpassword"
      MYSQL_DATABASE: "crm_kapexia_db"
      MYSQL_USER: "crm_user"
      MYSQL_PASSWORD: "userpassword"
    volumes:
      - mariadb_data:/var/lib/mysql
      # For SSL, we'll need to mount certificates and a custom my.cnf
      # - ./config/mariadb/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
      # - ./config/mariadb/ssl/:/etc/mysql/ssl/:ro 
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crm_kapexia_backend
    restart: unless-stopped
    ports:
      - "3001:3001" # Assuming backend runs on port 3001
    environment:
      NODE_ENV: "development"
      DB_HOST: "db"
      DB_USER: "crm_user"
      DB_PASSWORD: "userpassword"
      DB_NAME: "crm_kapexia_db"
      DB_PORT: "3306"
      JWT_SECRET: "averysecretjwtkey"
      # SSL_DB_CA_PATH: "/path/to/ca-cert.pem" # Path inside the container if needed
    volumes:
      - ./backend:/app # Mount for development
      - /app/node_modules # Anonymous volume to prevent local node_modules from overwriting container's
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crm_kapexia_frontend
    restart: unless-stopped
    ports:
      - "3000:3000" # Next.js default port
    environment:
      NODE_ENV: "development"
      NEXT_PUBLIC_API_URL: "http://localhost:3001/api" # URL for backend API
    volumes:
      - ./frontend:/app # Mount for development
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend

volumes:
  mariadb_data:

